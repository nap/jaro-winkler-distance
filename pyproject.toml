[project]
name = "pyjarowinkler"
version = "2.1.0"
description = "Finds the Jaro Winkler Distance indicating a distance or similarity score between two strings."
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
requires-python = ">= 3.9"
keywords = [
  "delta",
  "diff",
  "distance",
  "similarity",
  "jaro",
  "score",
  "string",
  "winkler",
]
authors = [
  { name = "Jean-Bernard Ratte", email = "jean.bernard.ratte@unary.ca" },
]
maintainers = [
  { name = "Jean-Bernard Ratte", email = "jean.bernard.ratte@unary.ca" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Text Processing",
]
dependencies = []

[project.optional-dependencies]
dev = ["mypy", "ruff", "coverage", "coverage[toml]"]

[project.urls]
Homepage = "https://pypi.org/project/pyjarowinkler/"
Documentation = "https://github.com/nap/jaro-winkler-distance#readme"
Issues = "https://github.com/nap/jaro-winkler-distance/issues"
Source = "https://github.com/nap/jaro-winkler-distance"
Repository = "https://github.com/nap/jaro-winkler-distance.git"

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = ""
module-name = ["pyjarowinkler"]
source-exclude = [".*", "*.sh"]

[tool.ruff]
line-length = 120
extend-exclude = [".github", "*.pyi"]

[tool.ruff.lint]
select = ["E", "F", "N", "D", "B", "Q", "I", "PL", "ARG", "RUF"]
ignore = ["D212", "D203"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D", "PT"]

[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 1
known-local-folder = ["pyjarowinkler"]

[tool.mypy]
files = ["pyjarowinkler"]
pretty = true
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_no_return = true

[tool.coverage.run]
dynamic_context = "test_function"
source = ["pyjarowinkler", "tests"]
branch = true

[tool.coverage.report]
omit = ["tests/*"]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
