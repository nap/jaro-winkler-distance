[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyjarowinkler"
dynamic = ["version"]
description = "Find the Jaro Winkler Distance which indicates the similarity score between two strings."
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "Apache-2.0" }
requires-python = ">= 3.9"
keywords = [
  "delta",
  "diff",
  "distance",
  "similarity",
  "jaro",
  "score",
  "string",
  "winkler",
]
authors = [
  { name = "Jean-Bernard Ratte", email = "jean.bernard.ratte@unary.ca" },
]
maintainers = [
  { name = "Jean-Bernard Ratte", email = "jean.bernard.ratte@unary.ca" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Text Processing",
]
dependencies = []

[project.optional-dependencies]
dev = [
  "coverage",
  "coverage[toml]",
  "hatch",
  "mypy",
  "pytest",
  "pytest-cov",
  "ruff",
]

[project.urls]
Documentation = "https://github.com/nap/jaro-winkler-distance#readme"
Issues = "https://github.com/nap/jaro-winkler-distance/issues"
Source = "https://github.com/nap/jaro-winkler-distance"

[tool.hatch.version]
path = "pyjarowinkler/__about__.py"

[tool.hatch.build]
ignore-vcs = true
exclude = [".*", "*.sh"]

[tool.hatch.build.targets.wheel]
packages = ["pyjarowinkler"]

[tool.hatch.envs.default]
python = "3.11"
dependencies = [
  "coverage",
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.lint]
detached = true
dependencies = ["mypy", "ruff"]

[tool.hatch.envs.lint.scripts]
typing = [
  "mypy --help --install-types --non-interactive {args:pyjarowinkler tests}",
]
check = [
  "ruff check --diff --quiet {args:.}",
]
fmt = [
  "ruff format --diff --quiet {args:.}",
]
all = ["check", "fmt", "typing"]

[tool.hatch.envs.test]
dependencies = [
  "coverage",
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.test.scripts]
run = "pytest"
cov = "pytest --cov-config=pyproject.toml --cov-report=term --cov=pyjarowinkler/"

[tool.ruff]
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = ["ISC001"]
exclude = [
  ".git",
  ".github",
  ".ruff_cache",
  ".venv",
  "__pycache__",
  "build",
  "dist",
  ".vscode",
]

[tool.ruff.per-file-ignores]
"tests/**/*" = [
  "PLR2004",
  "S101",
  "TID252",
]
"example.py" = ["T201"]

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.ruff.isort]
known-first-party = ["pyjarowinkler"]

[tool.isort]
profile = "black"
src_paths = ["pyjarowinkler", "tests"]
honor_noqa = true

[tool.mypy]
files = ["pyjarowinkler"]
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false

[tool.coverage.run]
source_pkgs = ["pyjarowinkler"]
branch = true
parallel = true
omit = [
  "pyjarowinkler/__about__.py",
  "pyjarowinkler/__init__.py",
]

[tool.coverage.paths]
pyjarowinkler = ["pyjarowinkler"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra"
testpaths = ["tests"]
pythonpath = ["."]
